// Place your key bindings in this file to override the defaults
[
    {
        "key": "ctrl+j",
        "command": "selectNextSuggestion",
        "when": "suggestWidgetVisible"
    },
    {
        "key": "ctrl+k",
        "command": "selectPrevSuggestion",
        "when": "suggestWidgetVisible"
    },
    {
        "key": "ctrl+j",
        "command": "workbench.action.quickOpenSelectNext",
        "when": "inQuickOpen"
    },
    {
        "key": "ctrl+k",
        "command": "workbench.action.quickOpenSelectPrevious",
        "when": "inQuickOpen"
    },
    {
        "key": "ctrl+shift+e",
        "command": "workbench.view.explorer"
    },
    {
        "key": "ctrl+shift+e",
        "command": "workbench.files.action.showActiveFileInExplorer",
        "when": "editorTextFocus"
    },
    {
        "key": "shift+cmd+e",
        "command": "-workbench.view.explorer"
    },
    {
        "key": "ctrl+shift+x",
        "command": "workbench.view.extensions"
    },
    {
        "key": "shift+cmd+x",
        "command": "-workbench.view.extensions"
    },
    {
        "key": "ctrl+shift+d",
        "command": "workbench.view.debug"
    },
    {
        "key": "shift+cmd+d",
        "command": "-workbench.view.debug"
    },
    {
        "key": "ctrl+h",
        "command": "workbench.action.navigateLeft",
        "when": "!inQuickOpen && !suggestWidgetVisible"
    },
    {
        "key": "ctrl+l",
        "command": "workbench.action.navigateRight",
        "when": "!inQuickOpen && !suggestWidgetVisible"
    },
    // Changed!!!
    {
        "key": "ctrl+k",
        "command": "workbench.action.navigateUp",
        "when": "!inQuickOpen && !suggestWidgetVisible && !inChat"
    },
    {
        "key": "ctrl+j",
        "command": "workbench.action.navigateDown",
        "when": "!inQuickOpen && !suggestWidgetVisible && !inChat"
    },
    {
        "key": "left",
        "command": "cursorLeft",
        "when": "textInputFocus"
    },
    {
        "key": "cmd+n",
        "command": "explorer.newFile",
    },
    {
        "key": "cmd+shift+n",
        "command": "explorer.newFolder"
    },
    {
        "key": "delete",
        "command": "-moveFileToTrash",
        "when": "explorerResourceMoveableToTrash && explorerViewletVisible && filesExplorerFocus && !explorerResourceReadonly && !inputFocus"
    },
    {
        "key": "e",
        "command": "copyRelativeFilePath",
        "when": "!editorFocus && listFocus && !inputFocus"
    },
    {
        "key": "shift+e",
        "command": "copyFilePath",
        "when": "!editorFocus && listFocus && !inputFocus"
    },
    // {
    //     "key": "c p",
    //     "command": "copyFilePath",
    //     "when": "!editorFocus && listFocus && !inputFocus"
    // },
    // {
    //     "key": "c r p",
    //     "command": "copyRelativeFilePath",
    //     "when": "!editorFocus && listFocus && !inputFocus"
    // },
    {
        "key": "ctrl+shift+f",
        "command": "workbench.action.findInFiles"
    },
    {
        "key": "shift+cmd+f",
        "command": "-workbench.action.findInFiles"
    },
    {
        "key": "ctrl+shift+f",
        "command": "workbench.action.terminal.searchWorkspace",
        "when": "terminalFocus && terminalProcessSupported && terminalProcessSupported && terminalTextSelected"
    },
    {
        "key": "shift+cmd+f",
        "command": "-workbench.action.terminal.searchWorkspace",
        "when": "terminalFocus && terminalProcessSupported && terminalProcessSupported && terminalTextSelected"
    },
    {
        "key": "ctrl+shift+f",
        "command": "workbench.view.search",
        "when": "!searchViewletVisible && config.search.mode == 'view'"
    },
    {
        "key": "shift+cmd+f",
        "command": "-workbench.view.search",
        "when": "!searchViewletVisible && config.search.mode == 'view'"
    },
    {
        "key": "ctrl+backspace",
        "command": "deleteRight",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+delete",
        "command": "-deleteRight",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+shift+p",
        "command": "workbench.action.showCommands",
        // "when": "neovim.mode != visual"
    },
    {
        "key": "shift+cmd+p",
        "command": "-workbench.action.showCommands"
    },
    {
        "key": "ctrl+shift+p",
        "command": "workbench.action.quickOpenNavigatePreviousInFilePicker",
        "when": "inFilesPicker && inQuickOpen"
    },
    // {
    //     "key": "shift+cmd+p",
    //     "command": "-workbench.action.quickOpenNavigatePreviousInFilePicker",
    //     "when": "inFilesPicker && inQuickOpen"
    // },
    {
        "key": "shift+cmd+h",
        "command": "workbench.action.replaceInFiles"
    },
    {
        "key": "shift+cmd+h",
        "command": "-workbench.action.replaceInFiles"
    },
    // {
    //     "key": "ctrl+shift+l",
    //     "command": "selectAllSearchEditorMatches",
    //     "when": "inSearchEditor"
    // },
    // {
    //     "key": "shift+cmd+l",
    //     "command": "-selectAllSearchEditorMatches",
    //     "when": "inSearchEditor"
    // },
    // {
    //     "key": "ctrl+shift+l",
    //     "command": "editor.action.selectHighlights",
    //     "when": "editorFocus"
    // },
    // {
    //     "key": "shift+cmd+l",
    //     "command": "-editor.action.selectHighlights",
    //     "when": "editorFocus"
    // },
    // {
    //     "key": "ctrl+shift+l",
    //     "command": "addCursorsAtSearchResults",
    //     "when": "fileMatchOrMatchFocus && searchViewletVisible"
    // },
    // {
    //     "key": "shift+cmd+l",
    //     "command": "-addCursorsAtSearchResults",
    //     "when": "fileMatchOrMatchFocus && searchViewletVisible"
    // },
    {
        "key": "ctrl+shift+b",
        "command": "workbench.action.tasks.build"
    },
    {
        "key": "shift+cmd+b",
        "command": "-workbench.action.tasks.build"
    },
    {
        "key": "a",
        "command": "git.stage",
        "when": "!editorFocus && listFocus && !inputFocus && workbench.scm.active"
    },
    {
        "key": "u",
        "command": "git.unstage",
        "when": "!editorFocus && listFocus && !inputFocus && workbench.scm.active"
    },
    {
        "key": "ctrl+t",
        "command": "workbench.action.terminal.focus",
        "when": "terminal.active"
    },
    {
        "key": "ctrl+`",
        "command": "-workbench.action.terminal.toggleTerminal",
        "when": "terminal.active"
    },
    {
        "key": "ctrl+shift+s",
        "command": "workbench.view.scm",
        "when": "workbench.scm.active"
    },
    {
        "key": "ctrl+shift+g",
        "command": "-workbench.view.scm",
        "when": "workbench.scm.active"
    },
    {
        "key": "ctrl+g",
        "command": "gitlens.views.graph.focus"
    },
    // {
    //     "key": "cmd+l",
    //     "command": "opensshremotes.openEmptyWindowInCurrentWindow"
    // },
    // VSCodeVim explorer keybindings
    {
        "key": "ctrl+g",
        "command": "-workbench.action.gotoLine"
    },
    // vscode-neovim keybindings
    {
        "key": "ctrl+o",
        "command": "-lineBreakInsert",
        "when": "textInputFocus && !editorReadonly"
    },
    {
        "key": "ctrl+o",
        "command": "vscode-neovim.send",
        "args": "<C-o>",
        "when": "editorTextFocus && neovim.mode == insert"
    },
    {
        "key": "enter",
        "command": "-java.view.package.renameFile",
        "when": "focusedView == 'javaProjectExplorer' && java:serverMode == 'Standard'"
    },
    {
        "key": "enter",
        "command": "notebook.cell.edit",
        "when": "notebookCellListFocused && !inputFocus"
    },
    {
        "key": "enter",
        "command": "-notebook.cell.edit",
        "when": "notebookCellListFocused && notebookEditable && !inputFocus"
    },
    {
        "key": "shift+o",
        "command": "notebook.cell.insertCodeCellAbove",
        "when": "notebookCellListFocused && !inputFocus"
    },
    {
        "key": "shift+cmd+enter",
        "command": "-notebook.cell.insertCodeCellAbove",
        "when": "notebookCellListFocused && !inputFocus"
    },
    {
        "key": "o",
        "command": "notebook.cell.insertCodeCellBelow",
        "when": "notebookCellListFocused && !inputFocus"
    },
    {
        "key": "cmd+enter",
        "command": "-notebook.cell.insertCodeCellBelow",
        "when": "notebookCellListFocused && !inputFocus"
    },
    {
        "key": "tab",
        "command": "workbench.action.nextEditorInGroup",
        "when": "editorTextFocus && neovim.mode != insert"
    },
    {
        "key": "tab",
        "command": "workbench.action.nextEditorInGroup",
        "when": "notebookCellListFocused && neovim.mode != insert"
    },
    // {
    //     "key": "tab",
    //     "command": "workbench.action.nextEditorInGroup",
    //     "when": "!textInputFocus && !terminalFocus && neovim.mode != cmdline"
    // },
    {
        "key": "shift+tab",
        "command": "workbench.action.previousEditorInGroup",
        "when": "editorTextFocus && neovim.mode != insert"
    },
    {
        "key": "shift+tab",
        "command": "workbench.action.previousEditorInGroup",
        "when": "notebookCellListFocused && neovim.mode != insert"
    },
    // {
    //     "key": "shift+tab",
    //     "command": "workbench.action.previousEditorInGroup",
    //     "when": "!textInputFocus && !terminalFocus && neovim.mode != cmdline"
    // },
    {
        "key": "ctrl+d",
        "command": "vscode-neovim.send",
        "args": "20j",
        "when": "notebookEditorFocused && neovim.mode != insert"
    },
    {
        "key": "ctrl+u",
        "command": "vscode-neovim.send",
        "args": "20k",
        "when": "notebookEditorFocused && neovim.mode != insert"
    },
    {
        "key": "cmd+r",
        "command": "workbench.action.reloadWindow",
    },
    // {
    //     "key": "escape",
    //     "command": "-vscode-neovim.escape",
    //     "when": "editorTextFocus && neovim.init && !markersNavigationVisible && !parameterHintsVisible && !referenceSearchVisible"
    // },
    // {
    //     "key": "escape",
    //     "command": "-closeReferenceSearch",
    //     "when": "inReferenceSearchEditor && !config.editor.stablePeek && neovim.mode == 'normal'"
    // }
    {
        "command": "whichkey.show",
        "key": "space",
        "when": "(((neovim.mode == normal || neovim.mode == visual) && editorTextFocus) || (!editorTextFocus && !inputFocus))"
    },
    {
        "key": "ctrl+shift+t",
        "command": "workbench.action.terminal.newWithProfile",
    },
    {
        "key": "cmd+l",
        "command": "cursorEnd",
        "when": "neovim.mode == insert && editorTextFocus"
    },
    // keybindings for ipad
    {
        "key": "ctrl+backspace",
        "command": "workbench.action.navigateLeft",
        "when": "!inQuickOpen && !suggestWidgetVisible && neovim.mode != insert"
    },
    {
        "key": "ctrl+.",
        "command": "editor.action.triggerSuggest",
        "when": "editorHasCompletionItemProvider && textInputFocus && !editorReadonly"
    },
    // {
    //     "key": "shift+2",
    //     "command": "editor.action.rename",
    //     "when": "editorHasRenameProvider && editorTextFocus && !editorReadonly && neovim.mode != insert"
    // },
    // For iPad coding
    // {
    //     "key": "cmd+j",
    //     "command": "commands.run",
    //     "args": [
    //         "workbench.action.navigateUp",
    //         "workbench.action.togglePanel",
    //     ],
    //     "when": "!inQuickOpen && !suggestWidgetVisible"
    // },
    {
        "key": "cmd+j",
        "command": "workbench.action.togglePanel",
        "when": "!inQuickOpen && !suggestWidgetVisible"
    },
    {
        "key": "ctrl+shift+o",
        "command": "workbench.action.files.openFolder"
    },
    {
        "key": "cmd+e",
        "command": "workbench.action.toggleSidebarVisibility"
    },
    {
        "key": "cmd+o",
        "command": "workbench.action.quickOpenNavigatePreviousInFilePicker",
        "when": "inFilesPicker && inQuickOpen"
    },
    {
        "key": "escape",
        "command": "workbench.action.terminal.sendSequence",
        "args": {
            "text": "\u0003"
        },
        "when": "terminalFocus",
    },
    // list config change to collapse sidebar visibility
    // {
    //     "key": "l",
    //     "command": "commands.run",
    //     "args": [
    //         "list.select",
    //         "workbench.action.toggleSidebarVisibility",
    //     ],
    //     "when": "listFocus && !inputFocus && !explorerResourceIsFolder"
    // },
    // tab moving
    {
        "key": "alt+tab",
        "command": "workbench.action.moveEditorRightInGroup"
    },
    {
        "key": "alt+shift+tab",
        "command": "workbench.action.moveEditorLeftInGroup"
    },
    // For iPad coding
    // {
    //     "key": "cmd+w",
    //     "command": "commands.run",
    //     "args": [
    //         "workbench.action.navigateUp",
    //         "workbench.action.terminal.kill",
    //     ],
    //     "when": "terminal.active && terminalFocus"
    // },
    {
        "key": "cmd+w",
        "command": "workbench.action.terminal.kill",
        "when": "terminal.active && terminalFocus"
    },
    {
        "key": "ctrl+p",
        "command": "-cursorUp",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+/",
        "command": "github.copilot.acceptCursorPanelSolution",
        "when": "github.copilot.activated && github.copilot.panelVisible"
    },
    {
        "key": "ctrl+shift+i",
        "command": "workbench.panel.chatSidebar.copilot"
    },
    {
        "key": "ctrl+cmd+l",
        "command": "workbench.action.moveEditorToRightGroup"
    },
    {
        "key": "ctrl+cmd+h",
        "command": "workbench.action.moveEditorToLeftGroup"
    },
    {
        "key": "ctrl+shift+r",
        "command": "workbench.action.openRecent"
    },
    {
        "key": "ctrl+shift+r",
        "command": "-editor.action.refactor",
        "when": "editorHasCodeActionsProvider && textInputFocus && !editorReadonly"
    },
    {
        "key": "ctrl+j",
        "command": "workbench.action.chat.nextCodeBlock",
        "when": "hasChatProvider && inChat"
    },
    {
        "key": "ctrl+k",
        "command": "workbench.action.chat.previousCodeBlock",
        "when": "hasChatProvider && inChat"
    },
    {
        "key": "cmd+r",
        "command": "jupyter.restartkernelandrunallcells",
        "when": "notebookEditorFocused && notebookKernelCount > 0"
    },
    {
        "key": "f",
        "command": "explorer.download",
        "when": "!editorFocus && listFocus && !inputFocus"
    },
    {
        "key": "shift+f",
        "command": "revealFileInOS",
        "when": "!editorFocus && listFocus && !inputFocus"
    },
    // Replace ctrl+c to esc project
    // {
    //     "key": "ctrl+c",
    //     "command": "closeReferenceSearch",
    //     "when": "inReferenceSearchEditor && !config.editor.stablePeek"
    // },
    // {
    //     "key": "ctrl+c",
    //     "command": "editor.closeTestPeek",
    //     "when": "testing.isInPeek && !config.editor.stablePeek || testing.isPeekVisible && !config.editor.stablePeek"
    // },
    // {
    //     "key": "ctrl+c",
    //     "command": "cancelSelection",
    //     "when": "editorHasSelection && textInputFocus"
    // },
    // {
    //     "key": "ctrl+c",
    //     "command": "removeSecondaryCursors",
    //     "when": "editorHasMultipleSelections && textInputFocus"
    // },
    // {
    //     "key": "ctrl+c",
    //     "command": "notebook.cell.quitEdit",
    //     "when": "inputFocus && notebookEditorFocused && !editorHasMultipleSelections && !editorHasSelection && !editorHoverVisible && neovim.mode == normal"
    // },
    // {
    //     "key": "ctrl+c",
    //     "command": "inlineChat.cancel",
    //     "when": "inlineChatHasProvider && inlineChatVisible"
    // },
    // {
    //     "key": "ctrl+c",
    //     "command": "closeBreakpointWidget",
    //     "when": "breakpointWidgetVisible && textInputFocus"
    // },
    // {
    //     "key": "ctrl+c",
    //     "command": "editor.action.cancelSelectionAnchor",
    //     "when": "editorTextFocus && selectionAnchorSet"
    // },
    // {
    //     "key": "ctrl+c",
    //     "command": "editor.action.hideColorPicker",
    //     "when": "standaloneColorPickerVisible"
    // },
    // {
    //     "key": "ctrl+c",
    //     "command": "editor.action.inlineSuggest.hide",
    //     "when": "inlineSuggestionVisible"
    // },
    // {
    //     "key": "ctrl+c",
    //     "command": "editor.action.selectEditor",
    //     "when": "stickyScrollFocused"
    // },
    // {
    //     "key": "ctrl+c",
    //     "command": "editor.action.webvieweditor.hideFind",
    //     "when": "webviewFindWidgetVisible && !editorFocus && activeEditor == 'WebviewEditor'"
    // },
    // {
    //     "key": "ctrl+c",
    //     "command": "editor.cancelOperation",
    //     "when": "cancellableOperation"
    // },
    // {
    //     "key": "ctrl+c",
    //     "command": "editor.debug.action.closeExceptionWidget",
    //     "when": "exceptionWidgetVisible"
    // },
    // {
    //     "key": "ctrl+c",
    //     "command": "editor.gotoNextSymbolFromResult.cancel",
    //     "when": "hasSymbols"
    // },
    // {
    //     "key": "ctrl+c",
    //     "command": "inlayHints.stopReadingLineWithHint",
    //     "when": "isReadingLineWithInlayHints"
    // },
    // {
    //     "key": "ctrl+c",
    //     "command": "interactive.acceptChanges",
    //     "when": "inlineChatHasProvider && inlineChatUserDidEdit && inlineChatVisible && !inlineChatDocumentChanged || inlineChatHasProvider && inlineChatUserDidEdit && inlineChatVisible && config.inlineChat.editMode != 'preview'"
    // },
    // {
    //     "key": "ctrl+c",
    //     "command": "search.action.focusQueryEditorWidget",
    //     "when": "inSearchEditor"
    // },
    // {
    //     "key": "ctrl+c",
    //     "command": "inlineChat.discard",
    //     "when": "inlineChatHasProvider && inlineChatVisible && !inlineChatUserDidEdit"
    // },
    // {
    //     "key": "ctrl+c",
    //     "command": "inlineChat.stop",
    //     "when": "inlineChatHasActiveRequest && inlineChatHasProvider && inlineChatVisible && !inlineChatEmpty"
    // },
    // {
    //     "key": "ctrl+c",
    //     "command": "settings.action.clearSearchResults",
    //     "when": "inSettingsEditor && inSettingsSearch"
    // },
    // {
    //     "key": "ctrl+c",
    //     "command": "welcome.goBack",
    //     "when": "inWelcome && activeEditor == 'gettingStartedPage'"
    // },
    // {
    //     "key": "ctrl+c",
    //     "command": "workbench.action.hideComment",
    //     "when": "commentEditorFocused"
    // },
    // {
    //     "key": "ctrl+c",
    //     "command": "closeFindWidget",
    //     "when": "editorFocus && findWidgetVisible && !isComposing"
    // },
    // {
    //     "key": "ctrl+c",
    //     "command": "leaveEditorMessage",
    //     "when": "messageVisible"
    // },
    // {
    //     "key": "ctrl+c",
    //     "command": "leaveSnippet",
    //     "when": "editorTextFocus && inSnippetMode"
    // },
    // {
    //     "key": "ctrl+c",
    //     "command": "closeDirtyDiff",
    //     "when": "dirtyDiffVisible"
    // },
    // {
    //     "key": "ctrl+c",
    //     "command": "closeMarkersNavigation",
    //     "when": "editorFocus && markersNavigationVisible"
    // },
    // {
    //     "key": "ctrl+c",
    //     "command": "notifications.hideToasts",
    //     "when": "notificationToastsVisible"
    // },
    // {
    //     "key": "ctrl+c",
    //     "command": "closeParameterHints",
    //     "when": "editorFocus && parameterHintsVisible"
    // },
    // {
    //     "key": "ctrl+c",
    //     "command": "hideSuggestWidget",
    //     "when": "suggestWidgetVisible && textInputFocus"
    // },
    // {
    //     "key": "ctrl+c",
    //     "command": "cancelLinkedEditingInput",
    //     "when": "LinkedEditingInputVisible && editorTextFocus"
    // },
    // {
    //     "key": "ctrl+c",
    //     "command": "cancelRenameInput",
    //     "when": "editorFocus && renameInputVisible"
    // },
    // {
    //     "key": "ctrl+c",
    //     "command": "closeReplaceInFilesWidget",
    //     "when": "replaceInputBoxFocus && searchViewletVisible"
    // },
    // {
    //     "key": "ctrl+c",
    //     "command": "commentsClearFilterText",
    //     "when": "commentsFilterFocus"
    // },
    // {
    //     "key": "ctrl+c",
    //     "command": "keybindings.editor.clearSearchResults",
    //     "when": "inKeybindings && inKeybindingsSearch"
    // },
    // {
    //     "key": "ctrl+c",
    //     "command": "keybindings.editor.rejectWhenExpression",
    //     "when": "inKeybindings && whenFocus && !suggestWidgetVisible"
    // },
    // {
    //     "key": "ctrl+c",
    //     "command": "list.clear",
    //     "when": "listFocus && listHasSelectionOrFocus && !inputFocus"
    // },
    // {
    //     "key": "ctrl+c",
    //     "command": "list.closeFind",
    //     "when": "listFocus && treeFindOpen"
    // },
    // {
    //     "key": "ctrl+c",
    //     "command": "notebook.hideFind",
    //     "when": "notebookEditorFocused && notebookFindWidgetFocused"
    // },
    // {
    //     "key": "ctrl+c",
    //     "command": "problems.action.clearFilterText",
    //     "when": "problemsFilterFocus"
    // },
    // {
    //     "key": "ctrl+c",
    //     "command": "search.action.cancel",
    //     "when": "listFocus && searchViewletVisible && !inputFocus && searchState != '0'"
    // },
    // {
    //     "key": "ctrl+c",
    //     "command": "settings.action.focusLevelUp",
    //     "when": "inSettingsEditor && !inSettingsJSONEditor && !inSettingsSearch"
    // },
    // {
    //     "key": "ctrl+c",
    //     "command": "workbench.action.closeQuickOpen",
    //     "when": "inQuickOpen"
    // },
    // {
    //     "key": "ctrl+c",
    //     "command": "workbench.action.terminal.clearSelection",
    //     "when": "terminalFocusInAny && terminalHasBeenCreated && terminalTextSelected && !terminalFindVisible || terminalFocusInAny && terminalProcessSupported && terminalTextSelected && !terminalFindVisible"
    // },
    // {
    //     "key": "ctrl+c",
    //     "command": "workbench.action.terminal.hideFind",
    //     "when": "terminalFindVisible && terminalFocus && terminalHasBeenCreated || terminalFindVisible && terminalFocus && terminalProcessSupported"
    // },
    // {
    //     "key": "ctrl+c",
    //     "command": "workbench.banner.focusBanner",
    //     "when": "bannerFocused"
    // },
    // {
    //     "key": "ctrl+c",
    //     "command": "workbench.statusBar.clearFocus",
    //     "when": "statusBarFocused"
    // },
    // {
    //     "key": "ctrl+c",
    //     "command": "breadcrumbs.selectEditor",
    //     "when": "breadcrumbsActive && breadcrumbsVisible"
    // },
    // {
    //     "key": "ctrl+c",
    //     "command": "workbench.action.terminal.hideSuggestWidget",
    //     "when": "terminalFocus && terminalHasBeenCreated && terminalIsOpen && terminalSuggestWidgetVisible || terminalFocus && terminalIsOpen && terminalProcessSupported && terminalSuggestWidgetVisible"
    // },
    // {
    //     "key": "ctrl+c",
    //     "command": "notebook.cell.quitEdit",
    //     "when": "notebookEditorFocused && notebookOutputFocused"
    // },
    // {
    //     "key": "ctrl+c",
    //     "command": "editor.closeCallHierarchy",
    //     "when": "callHierarchyVisible && !config.editor.stablePeek"
    // },
    // {
    //     "key": "ctrl+c",
    //     "command": "editor.closeTypeHierarchy",
    //     "when": "typeHierarchyVisible && !config.editor.stablePeek"
    // },
    // {
    //     "key": "ctrl+c",
    //     "command": "filesExplorer.cancelCut",
    //     "when": "explorerResourceCut && filesExplorerFocus && foldersViewVisible && !inputFocus"
    // },
    // {
    //     "key": "ctrl+c",
    //     "command": "closeReferenceSearch",
    //     "when": "referenceSearchVisible && !config.editor.stablePeek"
    // },
    // {
    //     "key": "ctrl+c",
    //     "command": "notifications.hideList",
    //     "when": "notificationCenterVisible"
    // },
    // {
    //     "key": "ctrl+c",
    //     "command": "notifications.hideToasts",
    //     "when": "notificationFocus && notificationToastsVisible"
    // },
    // {
    //     "key": "ctrl+c",
    //     "command": "hideCodeActionWidget",
    //     "when": "codeActionMenuVisible"
    // },
    {
        "key": "cmd+.",
        "command": "editor.action.inlineSuggest.trigger",
        "when": "config.github.copilot.inlineSuggest.enable && editorTextFocus && !editorHasSelection && !inlineSuggestionsVisible"
    },
    {
        "key": "alt+\\",
        "command": "-editor.action.inlineSuggest.trigger",
        "when": "config.github.copilot.inlineSuggest.enable && editorTextFocus && !editorHasSelection && !inlineSuggestionsVisible"
    },
    {
        "key": "tab",
        "command": "-acceptSelectedSuggestion",
        "when": "suggestWidgetHasFocusedSuggestion && suggestWidgetVisible && textInputFocus"
    },
    {
        "key": "tab",
        "command": "editor.action.inlineSuggest.commit",
        "when": "inlineSuggestionHasIndentationLessThanTabSize && inlineSuggestionVisible && !editorTabMovesFocus"
    },
    {
        "key": "d",
        "command": "debug.removeWatchExpression",
        "when": "watchExpressionsFocused && !expressionSelected"
    },
    {
        "args": "<C-f>",
        "command": "vscode-neovim.send",
        "key": "ctrl+f",
        "when": "editorFocus && neovim.init"
    },
    {
        "args": "<C-L>",
        "command": "vscode-neovim.send",
        "key": "ctrl+shift+l",
        "when": "editorFocus && neovim.init"
    },
    {
        "args": "<c-n>",
        "command": "vscode-neovim.send",
        "key": "ctrl+n",
        "when": "editorFocus && neovim.init"
    },
    {
        "args": "<c-p>",
        "command": "vscode-neovim.send",
        "key": "ctrl+p",
        "when": "editorFocus && neovim.init"
    },
    {
        "key": "ctrl+cmd+n",
        "command": "workbench.action.newWindow"
    },
    {
        "key": "shift+cmd+n",
        "command": "-workbench.action.newWindow"
    },
    {
        "key": "ctrl+shift+j",
        "command": "workbench.view.extension.cph-judge-view-container"
    },
    {
        "key": "cmd+shift+v",
        "command": "latex-workshop.view",
        "when": "!config.latex-workshop.bind.altKeymap.enabled && !virtualWorkspace && editorLangId =~ /^latex$|^latex-expl3$|^doctex$|^rsweave$|^jlweave$|^pweave$/"
    },
    {
        "key": "cmd+shift+v",
        "command": "markdown.showPreviewToSide",
        "when": "!notebookEditorFocused && editorLangId == 'markdown'"
    },
    {
        "key": "shift+cmd+v",
        "command": "-markdown.showPreview",
        "when": "!notebookEditorFocused && editorLangId == 'markdown'"
    },
    {
        "key": "ctrl+cmd+i",
        "command": "-workbench.action.chat.open"
    },
    {
        "key": "ctrl+cmd+i",
        "command": "workbench.action.chat.openInEditor"
    },
    {
        "key": "ctrl+cmd+w",
        "command": "workbench.action.closeWindow"
    },
    {
        "key": "shift+cmd+w",
        "command": "-workbench.action.closeWindow"
    },
    {
        "key": "ctrl+alt+right",
        "command": "-cursorWordPartRight",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+alt+right",
        "command": "-quickInput.acceptInBackground",
        "when": "cursorAtEndOfQuickInputBox && inQuickInput && quickInputType == 'quickPick' || inQuickInput && !inputFocus && quickInputType == 'quickPick'"
    },
    {
        "key": "ctrl+alt+left",
        "command": "-cursorWordPartLeft",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+cmd+j",
        "command": "workbench.action.moveEditorToBelowGroup"
    },
    {
        "key": "ctrl+cmd+k",
        "command": "workbench.action.moveEditorToAboveGroup"
    },
    {
        "key": "cmd+[",
        "command": "-editor.action.outdentLines",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "cmd+]",
        "command": "-editor.action.indentLines",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "shift+cmd+]",
        "command": "-workbench.action.nextEditor"
    },
    {
        "key": "cmd+]",
        "command": "workbench.action.terminal.focusNext",
        "when": "terminalFocus && terminalHasBeenCreated && !terminalEditorFocus || terminalFocus && terminalProcessSupported && !terminalEditorFocus"
    },
    {
        "key": "shift+cmd+]",
        "command": "-workbench.action.terminal.focusNext",
        "when": "terminalFocus && terminalHasBeenCreated && !terminalEditorFocus || terminalFocus && terminalProcessSupported && !terminalEditorFocus"
    },
    {
        "key": "cmd+[",
        "command": "workbench.action.terminal.focusPrevious",
        "when": "terminalFocus && terminalHasBeenCreated && !terminalEditorFocus || terminalFocus && terminalProcessSupported && !terminalEditorFocus"
    },
    {
        "key": "shift+cmd+[",
        "command": "-workbench.action.terminal.focusPrevious",
        "when": "terminalFocus && terminalHasBeenCreated && !terminalEditorFocus || terminalFocus && terminalProcessSupported && !terminalEditorFocus"
    },
    {
        "key": "shift+cmd+[",
        "command": "-workbench.action.previousEditor"
    },
    {
        "key": "r",
        "command": "workbench.action.terminal.renameActiveTab",
        "when": "terminalHasBeenCreated && terminalTabsFocus && terminalTabsSingularSelection || terminalProcessSupported && terminalTabsFocus && terminalTabsSingularSelection"
    },
    {
        "key": "enter",
        "command": "-workbench.action.terminal.renameActiveTab",
        "when": "terminalHasBeenCreated && terminalTabsFocus && terminalTabsSingularSelection || terminalProcessSupported && terminalTabsFocus && terminalTabsSingularSelection"
    }
]