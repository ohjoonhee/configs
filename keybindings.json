// Place your key bindings in this file to override the defaults
[
    {
        "key": "ctrl+j",
        "command": "selectNextSuggestion",
        "when": "suggestWidgetVisible"
    },
    {
        "key": "ctrl+k",
        "command": "selectPrevSuggestion",
        "when": "suggestWidgetVisible"
    },
    {
        "key": "ctrl+j",
        "command": "workbench.action.quickOpenSelectNext",
        "when": "inQuickOpen"
    },
    {
        "key": "ctrl+k",
        "command": "workbench.action.quickOpenSelectPrevious",
        "when": "inQuickOpen"
    },
    {
        "key": "ctrl+shift+e",
        "command": "workbench.view.explorer"
    },
    {
        "key": "ctrl+e",
        "command": "workbench.files.action.showActiveFileInExplorer",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+shift+e",
        "command": "-workbench.view.explorer"
    },
    {
        "key": "ctrl+shift+x",
        "command": "workbench.view.extensions"
    },
    {
        "key": "shift+cmd+x",
        "command": "-workbench.view.extensions"
    },
    {
        "key": "ctrl+shift+d",
        "command": "workbench.view.debug"
    },
    {
        "key": "shift+cmd+d",
        "command": "-workbench.view.debug"
    },
    {
        "key": "ctrl+1",
        "command": "workbench.action.focusFirstEditorGroup"
    },
    {
        "key": "cmd+1",
        "command": "-workbench.action.focusFirstEditorGroup"
    },
    {
        "key": "cmd+1",
        "command": "workbench.action.openEditorAtIndex1"
    },
    {
        "key": "ctrl+1",
        "command": "-workbench.action.openEditorAtIndex1"
    },
    {
        "key": "cmd+2",
        "command": "workbench.action.openEditorAtIndex2"
    },
    {
        "key": "ctrl+2",
        "command": "-workbench.action.openEditorAtIndex2"
    },
    {
        "key": "ctrl+2",
        "command": "workbench.action.focusSecondEditorGroup"
    },
    {
        "key": "cmd+2",
        "command": "-workbench.action.focusSecondEditorGroup"
    },
    {
        "key": "ctrl+3",
        "command": "workbench.action.focusThirdEditorGroup"
    },
    {
        "key": "cmd+3",
        "command": "-workbench.action.focusThirdEditorGroup"
    },
    {
        "key": "cmd+3",
        "command": "workbench.action.openEditorAtIndex3"
    },
    {
        "key": "ctrl+3",
        "command": "-workbench.action.openEditorAtIndex3"
    },
    {
        "key": "ctrl+h",
        "command": "workbench.action.navigateLeft",
        "when": "!inQuickOpen && !suggestWidgetVisible"
    },
    {
        "key": "ctrl+l",
        "command": "workbench.action.navigateRight",
        "when": "!inQuickOpen && !suggestWidgetVisible"
    },
    {
        "key": "ctrl+k",
        "command": "workbench.action.navigateUp",
        "when": "!inQuickOpen && !suggestWidgetVisible"
    },
    {
        "key": "ctrl+j",
        "command": "workbench.action.navigateDown",
        "when": "!inQuickOpen && !suggestWidgetVisible"
    },
    {
        "key": "left",
        "command": "cursorLeft",
        "when": "textInputFocus"
    },
    // {
    //     "key": "ctrl+b",
    //     "command": "-cursorLeft",
    //     "when": "textInputFocus"
    // },
    // {
    //     "key": "ctrl+b",
    //     "command": "extension.openInDefaultBrowser"
    // },
    {
        "key": "alt+b",
        "command": "-extension.openInDefaultBrowser"
    },
    {
        "key": "ctrl+n",
        "command": "explorer.newFile"
    },
    {
        "key": "delete",
        "command": "-moveFileToTrash",
        "when": "explorerResourceMoveableToTrash && explorerViewletVisible && filesExplorerFocus && !explorerResourceReadonly && !inputFocus"
    },
    // {
    //     "key": "e",
    //     "command": "revealFileInOS",
    //     "when": "!editorFocus && listFocus && !inputFocus"
    // },
    {
        "key": "e",
        "command": "copyRelativeFilePath",
        "when": "!editorFocus && listFocus && !inputFocus"
    },
    // {
    //     "key": "c p",
    //     "command": "copyFilePath",
    //     "when": "!editorFocus && listFocus && !inputFocus"
    // },
    // {
    //     "key": "c r p",
    //     "command": "copyRelativeFilePath",
    //     "when": "!editorFocus && listFocus && !inputFocus"
    // },
    {
        "key": "ctrl+shift+f",
        "command": "workbench.action.findInFiles"
    },
    {
        "key": "shift+cmd+f",
        "command": "-workbench.action.findInFiles"
    },
    {
        "key": "ctrl+shift+f",
        "command": "workbench.action.terminal.searchWorkspace",
        "when": "terminalFocus && terminalProcessSupported && terminalProcessSupported && terminalTextSelected"
    },
    {
        "key": "shift+cmd+f",
        "command": "-workbench.action.terminal.searchWorkspace",
        "when": "terminalFocus && terminalProcessSupported && terminalProcessSupported && terminalTextSelected"
    },
    {
        "key": "ctrl+shift+f",
        "command": "workbench.view.search",
        "when": "!searchViewletVisible && config.search.mode == 'view'"
    },
    {
        "key": "shift+cmd+f",
        "command": "-workbench.view.search",
        "when": "!searchViewletVisible && config.search.mode == 'view'"
    },
    {
        "key": "ctrl+shift+n",
        "command": "explorer.newFolder"
    },
    {
        "key": "ctrl+backspace",
        "command": "deleteRight",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+delete",
        "command": "-deleteRight",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+shift+p",
        "command": "workbench.action.showCommands"
    },
    {
        "key": "shift+cmd+p",
        "command": "-workbench.action.showCommands"
    },
    {
        "key": "ctrl+shift+p",
        "command": "workbench.action.quickOpenNavigatePreviousInFilePicker",
        "when": "inFilesPicker && inQuickOpen"
    },
    // {
    //     "key": "shift+cmd+p",
    //     "command": "-workbench.action.quickOpenNavigatePreviousInFilePicker",
    //     "when": "inFilesPicker && inQuickOpen"
    // },
    {
        "key": "shift+cmd+h",
        "command": "workbench.action.replaceInFiles"
    },
    {
        "key": "shift+cmd+h",
        "command": "-workbench.action.replaceInFiles"
    },
    {
        "key": "ctrl+shift+l",
        "command": "selectAllSearchEditorMatches",
        "when": "inSearchEditor"
    },
    {
        "key": "shift+cmd+l",
        "command": "-selectAllSearchEditorMatches",
        "when": "inSearchEditor"
    },
    {
        "key": "ctrl+shift+l",
        "command": "editor.action.selectHighlights",
        "when": "editorFocus"
    },
    {
        "key": "shift+cmd+l",
        "command": "-editor.action.selectHighlights",
        "when": "editorFocus"
    },
    {
        "key": "ctrl+shift+l",
        "command": "addCursorsAtSearchResults",
        "when": "fileMatchOrMatchFocus && searchViewletVisible"
    },
    {
        "key": "shift+cmd+l",
        "command": "-addCursorsAtSearchResults",
        "when": "fileMatchOrMatchFocus && searchViewletVisible"
    },
    {
        "key": "ctrl+shift+b",
        "command": "workbench.action.tasks.build"
    },
    {
        "key": "shift+cmd+b",
        "command": "-workbench.action.tasks.build"
    },
    {
        "key": "ctrl+shift+s",
        "command": "workbench.view.remote"
    },
    {
        "key": "a",
        "command": "git.stage",
        "when": "!editorFocus && listFocus && !inputFocus && workbench.scm.active"
    },
    {
        "key": "u",
        "command": "git.unstage",
        "when": "!editorFocus && listFocus && !inputFocus && workbench.scm.active"
    },
    {
        "key": "ctrl+t",
        "command": "workbench.action.terminal.focus",
        "when": "terminal.active"
    },
    {
        "key": "ctrl+`",
        "command": "-workbench.action.terminal.toggleTerminal",
        "when": "terminal.active"
    },
    {
        "key": "ctrl+shift+c",
        "command": "workbench.view.scm",
        "when": "workbench.scm.active"
    },
    {
        "key": "ctrl+shift+g",
        "command": "-workbench.view.scm",
        "when": "workbench.scm.active"
    },
    {
        "key": "ctrl+g",
        "command": "git-graph.view"
    },
    // {
    //     "key": "cmd+l",
    //     "command": "opensshremotes.openEmptyWindowInCurrentWindow"
    // },
    // VSCodeVim explorer keybindings
    {
        "key": "/",
        "command": "list.toggleKeyboardNavigation",
        "when": "listFocus && !inputFocus && listSupportsKeyboardNavigation"
    },
    {
        "key": "ctrl+g",
        "command": "-workbench.action.gotoLine"
    },
    // vscode-neovim keybindings
    {
        "key": "ctrl+o",
        "command": "-lineBreakInsert",
        "when": "textInputFocus && !editorReadonly"
    },
    {
        "key": "ctrl+o",
        "command": "vscode-neovim.send",
        "args": "<C-o>",
        "when": "editorTextFocus && neovim.mode == insert"
    },
    {
        "key": "enter",
        "command": "-java.view.package.renameFile",
        "when": "focusedView == 'javaProjectExplorer' && java:serverMode == 'Standard'"
    },
    {
        "key": "enter",
        "command": "notebook.cell.edit",
        "when": "notebookCellListFocused && !inputFocus"
    },
    {
        "key": "enter",
        "command": "-notebook.cell.edit",
        "when": "notebookCellListFocused && notebookEditable && !inputFocus"
    },
    {
        "key": "shift+o",
        "command": "notebook.cell.insertCodeCellAbove",
        "when": "notebookCellListFocused && !inputFocus"
    },
    {
        "key": "shift+cmd+enter",
        "command": "-notebook.cell.insertCodeCellAbove",
        "when": "notebookCellListFocused && !inputFocus"
    },
    {
        "key": "o",
        "command": "notebook.cell.insertCodeCellBelow",
        "when": "notebookCellListFocused && !inputFocus"
    },
    {
        "key": "cmd+enter",
        "command": "-notebook.cell.insertCodeCellBelow",
        "when": "notebookCellListFocused && !inputFocus"
    },
    {
        "key": "tab",
        "command": "workbench.action.nextEditorInGroup",
        "when": "editorTextFocus && neovim.mode != insert"
    },
    {
        "key": "tab",
        "command": "workbench.action.nextEditorInGroup",
        "when": "notebookCellListFocused && neovim.mode != insert"
    },
    {
        "key": "shift+tab",
        "command": "workbench.action.previousEditorInGroup",
        "when": "editorTextFocus && neovim.mode != insert"
    },
    {
        "key": "shift+tab",
        "command": "workbench.action.previousEditorInGroup",
        "when": "notebookCellListFocused && neovim.mode != insert"
    },
    {
        "key": "ctrl+d",
        "command": "vscode-neovim.send",
        "args": "20j",
        "when": "notebookEditorFocused && neovim.mode != insert"
    },
    {
        "key": "ctrl+u",
        "command": "vscode-neovim.send",
        "args": "20k",
        "when": "notebookEditorFocused && neovim.mode != insert"
    },
    {
        "key": "cmd+r",
        "command": "workbench.action.reloadWindow",
    },
    {
        "key": "cmd+r",
        "command": "workbench.files.action.refreshFilesExplorer",
        "when": "filesExplorerFocus"
    },
    // {
    //     "key": "escape",
    //     "command": "-vscode-neovim.escape",
    //     "when": "editorTextFocus && neovim.init && !markersNavigationVisible && !parameterHintsVisible && !referenceSearchVisible"
    // },
    // {
    //     "key": "escape",
    //     "command": "-closeReferenceSearch",
    //     "when": "inReferenceSearchEditor && !config.editor.stablePeek && neovim.mode == 'normal'"
    // }
    {
        "command": "vscode-neovim.compositeEscape1",
        "key": "j",
        "when": "neovim.mode == insert && editorTextFocus",
        "args": "j"
    },
    {
        "command": "vscode-neovim.compositeEscape2",
        "key": "k",
        "when": "neovim.mode == insert && editorTextFocus",
        "args": "k"
    },
    {
        "command": "whichkey.show",
        "key": "space",
        "when": "neovim.mode == normal && editorTextFocus"
    },
    //{
    //    "key": "ctrl+shift+t",
    //   "command": "workbench.action.terminal.newWithProfile",
    //},
    {
        "key": "cmd+l",
        "command": "cursorEnd",
        "when": "neovim.mode == insert && editorTextFocus"
    },
    // keybindings for ipad
    {
        "key": "ctrl+backspace",
        "command": "workbench.action.navigateLeft",
        "when": "!inQuickOpen && !suggestWidgetVisible && neovim.mode != insert"
    },
    {
        "key": "ctrl+.",
        "command": "editor.action.triggerSuggest",
        "when": "editorHasCompletionItemProvider && textInputFocus && !editorReadonly"
    },
    // {
    //     "key": "shift+2",
    //     "command": "editor.action.rename",
    //     "when": "editorHasRenameProvider && editorTextFocus && !editorReadonly && neovim.mode != insert"
    // },
    {
        "key": "home",
        "command": "workbench.action.closeActiveEditor"
    },
    {
        "key": "ctrl+shift+t",
	//required: Commands(extension)
        "command": "commands.run", 
        "args": [
            "workbench.action.navigateUp",
            "workbench.action.togglePanel",
        ],
        "when": "!inQuickOpen && !suggestWidgetVisible"
    },
    {
        "key": "ctrl+shift+o",
        "command": "workbench.action.files.openFolder"
    },
    {
        "key": "ctrl+alt+e",
        "command": "workbench.action.toggleSidebarVisibility"
    },
    {
        "key": "cmd+o",
        "command": "workbench.action.quickOpenNavigatePreviousInFilePicker",
        "when": "inFilesPicker && inQuickOpen"
    },
    {
        "key": "ctrl+shift+enter",
        "command": "github.copilot.generate",
        "when": "editorTextFocus && github.copilot.activated"
    },
    // {
    //     "key": "ctrl+c",
    //     "command": "search.action.cancel",
    //     "when": "listFocus && searchViewletVisible && !inputFocus && searchState != '0'"
    // },
    // {
    //     "key": "ctrl+c",
    //     "command": "cancelRenameInput",
    //     "when": "editorFocus && renameInputVisible"
    // },
    // {
    //     "key": "ctrl+c",
    //     "command": "workbench.action.closeQuickOpen",
    //     "when": "inQuickOpen"
    // },
    // Since Blink shell change ctrl+c -> esc
    {
        "key": "escape",
        "command": "workbench.action.terminal.sendSequence",
        "args": {
            "text": "\u0003"
        },
        "when": "terminalFocus",
    },
    // list config change to collapse sidebar visibility
    {
        "key": "l",
        "command": "commands.run",
        "args": [
            "list.select",
            "workbench.action.toggleSidebarVisibility",
        ],
        "when": "listFocus && !inputFocus && !explorerResourceIsFolder"
    },
    // tab moving
    {
        "key": "alt+tab",
        "command": "workbench.action.moveEditorRightInGroup"
    },
    {
        "key": "alt+shift+tab",
        "command": "workbench.action.moveEditorLeftInGroup"
    }
]
